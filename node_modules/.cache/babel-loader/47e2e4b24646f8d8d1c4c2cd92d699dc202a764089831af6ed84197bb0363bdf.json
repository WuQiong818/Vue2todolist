{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { nanoid } from \"nanoid\";\nimport { watch } from \"vue\";\nexport default {\n  namespaced: true,\n  state: {\n    // 增、删、改、查\n    todos: JSON.parse(localStorage.getItem(\"todos\")) || []\n  },\n  // 当state中的需要加工可以使用getters并不对数据进行修改\n  getters: {\n    getFinishedTodos(state) {\n      return state.todos.filter(item => item.isFinished);\n    },\n    getStepsTodos(state) {\n      return state.todos.filter(item => item.todoThing.steps);\n    }\n  },\n  actions: {\n    add(context, value) {\n      context.commit(\"ADD\", value);\n    }\n  },\n  mutations: {\n    // 这个改一下，不在这里封装大量的逻辑\n    ADD: function (state, value) {\n      state.todos.push(value);\n      window.localStorage.setItem('todos', JSON.stringify(state.todos));\n    },\n    ADDSTEPS: function (state, value) {\n      state.todos.forEach(item => {\n        if (item.id == value.id) {\n          item.todoThing.steps.push(value.todoThing);\n          return;\n        }\n      });\n      window.localStorage.setItem('todos', JSON.stringify(state.todos));\n    },\n    EDIT: function (state, value) {\n      state.todos.forEach(item => {\n        if (item.id == value.id) {\n          item.isEdit = true;\n          return;\n        }\n      });\n    },\n    // 修改内容\n    ALTER: function (state, value) {\n      state.todos.forEach(item => {\n        if (value.id == item.id) {\n          item.isEdit = value.isEdit;\n          item.todoThing.title = value.todoThing.title;\n          return;\n        }\n      });\n      window.localStorage.setItem('todos', JSON.stringify(state.todos));\n    },\n    DELETE: function (state, value) {\n      const todoArray = state.todos;\n      for (var i = 0; i < todoArray.length; i++) {\n        if (todoArray[i].id == value.id) {\n          todoArray.splice(i, 1);\n        }\n      }\n      window.localStorage.setItem('todos', JSON.stringify(state.todos));\n    },\n    DELETEDSTEPS: function (state, value) {\n      state.todos.forEach(item => {\n        if (item.id == value.id) {\n          item.todoThing.steps = value.todoThing.steps;\n          return;\n        }\n      });\n      window.localStorage.setItem('todos', JSON.stringify(state.todos));\n    },\n    // 这里进行本地finishedTask的存储，把方法转移过来；\n    ALTERCHECKBOX: function (state, value) {\n      state.todos.forEach(item => {\n        if (item.id == value.id) {\n          item.isFinished = !item.isFinished;\n          return;\n        }\n      });\n      window.localStorage.setItem('todos', JSON.stringify(state.todos));\n      // 这里进行完成完成任务情况的本地存储；\n      const finishedThing = [{\n        id: \"1\",\n        name: \"待分组任务\"\n      }];\n      const arr1 = JSON.parse(localStorage.getItem(\"oneArea\")) || [];\n      const arr2 = JSON.parse(localStorage.getItem(\"twoArea\")) || [];\n      const arr3 = JSON.parse(localStorage.getItem(\"threeArea\")) || [];\n      const arr4 = JSON.parse(localStorage.getItem(\"fourArea\")) || [];\n      const newArr = [].concat(arr1, arr2, arr3, arr4);\n      for (let i = 0; i < newArr.length; i++) {\n        if (newArr[i].id == '1') {\n          newArr.splice(i, 1);\n        }\n      }\n      // 进行四个区域中id与已完成任务中id的对比，保证finished中的数据是不重复的；\n      const flag = true;\n      for (let i = 0; i < state.todos.length; i++) {\n        if (state.todos[i].isFinished) {\n          for (let k = 0; k < newArr.length; k++) {\n            if (arr1[k].id == state.todos[i].id) {\n              flag = false;\n              break;\n            }\n          }\n        }\n        if (state.todos[i].isFinished) {\n          if (flag) {\n            const id = state.todos[i].id;\n            const title = state.todos[i].todoThing.title;\n            const taskObj = {\n              id: id,\n              name: title\n            };\n            finishedThing.push(taskObj);\n          }\n        }\n      }\n      localStorage.setItem(\"finishedTask\", JSON.stringify(finishedThing));\n    },\n    ALTERCHESTEPSCKBOX: function (state, value) {\n      state.todos.forEach(item => {\n        if (item.id == value.id) {\n          // 组件内加工好，这边直接进行更换：\n          item.todoThing.steps = value.todoThing.steps;\n          return;\n        }\n      });\n      window.localStorage.setItem('todos', JSON.stringify(state.todos));\n    },\n    CHANGEWEIGHT: function (state, value) {\n      state.todos.forEach(item => {\n        if (item.id == value.id) {\n          item.isImportance = !item.isImportance;\n          return;\n        }\n      });\n      window.localStorage.setItem('todos', JSON.stringify(state.todos));\n    },\n    SETDEADLINE: function (state, value) {\n      state.todos.forEach(item => {\n        if (item.id == value.id) {\n          item.todoThing.deadline = value.todoThing.deadline;\n          return;\n        }\n      });\n      window.localStorage.setItem('todos', JSON.stringify(state.todos));\n    }\n  }\n};","map":{"version":3,"names":["nanoid","watch","namespaced","state","todos","JSON","parse","localStorage","getItem","getters","getFinishedTodos","filter","item","isFinished","getStepsTodos","todoThing","steps","actions","add","context","value","commit","mutations","ADD","push","window","setItem","stringify","ADDSTEPS","forEach","id","EDIT","isEdit","ALTER","title","DELETE","todoArray","i","length","splice","DELETEDSTEPS","ALTERCHECKBOX","finishedThing","name","arr1","arr2","arr3","arr4","newArr","concat","flag","k","taskObj","ALTERCHESTEPSCKBOX","CHANGEWEIGHT","isImportance","SETDEADLINE","deadline"],"sources":["D:/SoftwareDevelop/VsData/Vue/todolist/src/store/todoOptions.js"],"sourcesContent":["\r\nimport { nanoid } from \"nanoid\";\r\nimport { watch } from \"vue\";\r\nexport default {\r\n    namespaced: true,\r\n    state: {\r\n        // 增、删、改、查\r\n        todos: JSON.parse(localStorage.getItem(\"todos\")) || []\r\n    },\r\n\r\n    // 当state中的需要加工可以使用getters并不对数据进行修改\r\n    getters: {\r\n        getFinishedTodos(state){\r\n            return state.todos.filter((item)=>item.isFinished)\r\n        },\r\n        getStepsTodos(state){\r\n            return state.todos.filter((item)=>item.todoThing.steps)\r\n        }\r\n    },\r\n\r\n    actions: {\r\n        add(context, value) {\r\n            context.commit(\"ADD\", value)\r\n        }\r\n    },\r\n    mutations: {\r\n        // 这个改一下，不在这里封装大量的逻辑\r\n        ADD: function (state, value) {\r\n            state.todos.push(value)\r\n            window.localStorage.setItem('todos', JSON.stringify(state.todos))\r\n        },\r\n        ADDSTEPS: function (state, value) {\r\n            state.todos.forEach(item => {\r\n                if (item.id == value.id) {\r\n                    item.todoThing.steps.push(value.todoThing)\r\n                    return\r\n                }\r\n            })\r\n            window.localStorage.setItem('todos', JSON.stringify(state.todos))\r\n        },\r\n        EDIT: function (state, value) {\r\n            state.todos.forEach(item => {\r\n                if (item.id == value.id) {\r\n                    item.isEdit = true;\r\n                    return\r\n                }\r\n            });\r\n        },\r\n        // 修改内容\r\n        ALTER: function (state, value) {\r\n            state.todos.forEach(item => {\r\n                if (value.id == item.id) {\r\n                    item.isEdit = value.isEdit;\r\n                    item.todoThing.title = value.todoThing.title;\r\n                    return\r\n                }\r\n            });\r\n            window.localStorage.setItem('todos', JSON.stringify(state.todos))\r\n        },\r\n        DELETE: function (state, value) {\r\n            const todoArray = state.todos\r\n            for (var i = 0; i < todoArray.length; i++) {\r\n                if (todoArray[i].id == value.id) {\r\n                    todoArray.splice(i, 1)\r\n                }\r\n            }\r\n            window.localStorage.setItem('todos', JSON.stringify(state.todos))\r\n        },\r\n        DELETEDSTEPS: function (state, value) {\r\n            state.todos.forEach(item => {\r\n                if (item.id == value.id) {\r\n                    item.todoThing.steps = value.todoThing.steps\r\n                    return\r\n                }\r\n            });\r\n            window.localStorage.setItem('todos', JSON.stringify(state.todos))\r\n        },\r\n        // 这里进行本地finishedTask的存储，把方法转移过来；\r\n        ALTERCHECKBOX: function (state, value) {\r\n            state.todos.forEach(item => {\r\n                if (item.id == value.id) {\r\n                    item.isFinished = !(item.isFinished)\r\n                    return\r\n                }\r\n            });\r\n            window.localStorage.setItem('todos', JSON.stringify(state.todos))\r\n            // 这里进行完成完成任务情况的本地存储；\r\n            const finishedThing = [{ id: \"1\", name: \"待分组任务\" }];\r\n            const arr1 = JSON.parse(localStorage.getItem(\"oneArea\")) || []\r\n            const arr2 = JSON.parse(localStorage.getItem(\"twoArea\")) || []\r\n            const arr3 = JSON.parse(localStorage.getItem(\"threeArea\")) || []\r\n            const arr4 = JSON.parse(localStorage.getItem(\"fourArea\")) || []\r\n            const newArr = [].concat(arr1, arr2, arr3, arr4)\r\n            for (let i = 0; i < newArr.length; i++) {\r\n                if (newArr[i].id == '1') {\r\n                    newArr.splice(i, 1);\r\n                }\r\n            }\r\n            // 进行四个区域中id与已完成任务中id的对比，保证finished中的数据是不重复的；\r\n            const flag = true;\r\n            for (let i = 0; i < state.todos.length; i++) {\r\n                if (state.todos[i].isFinished) {\r\n                    for (let k = 0; k < newArr.length; k++) {\r\n                        if (arr1[k].id == state.todos[i].id) {\r\n                            flag = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (state.todos[i].isFinished) {\r\n                    if (flag) {\r\n                        const id = state.todos[i].id;\r\n                        const title = state.todos[i].todoThing.title;\r\n                        const taskObj = { id: id, name: title };\r\n                        finishedThing.push(taskObj);\r\n                    }\r\n                }\r\n            }\r\n            localStorage.setItem(\"finishedTask\", JSON.stringify(finishedThing));\r\n        },\r\n        ALTERCHESTEPSCKBOX: function (state, value) {\r\n            state.todos.forEach(item => {\r\n                if (item.id == value.id) {\r\n                    // 组件内加工好，这边直接进行更换：\r\n                    item.todoThing.steps = value.todoThing.steps\r\n                    return\r\n                }\r\n            });\r\n            window.localStorage.setItem('todos', JSON.stringify(state.todos))\r\n        },\r\n        CHANGEWEIGHT: function (state, value) {\r\n            state.todos.forEach(item => {\r\n                if (item.id == value.id) {\r\n                    item.isImportance = !(item.isImportance)\r\n                    return\r\n                }\r\n            });\r\n            window.localStorage.setItem('todos', JSON.stringify(state.todos))\r\n        },\r\n        SETDEADLINE: function (state, value) {\r\n            state.todos.forEach(item => {\r\n                if (item.id == value.id) {\r\n                    item.todoThing.deadline = value.todoThing.deadline\r\n                    return\r\n                }\r\n            })\r\n            window.localStorage.setItem('todos', JSON.stringify(state.todos))\r\n        },\r\n\r\n\r\n\r\n\r\n    },\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}