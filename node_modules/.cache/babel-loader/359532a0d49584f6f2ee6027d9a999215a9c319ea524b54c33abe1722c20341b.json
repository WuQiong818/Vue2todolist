{"ast":null,"code":"import * as echarts from \"echarts\";\nimport { mapGetters } from 'vuex';\nexport default {\n  data() {\n    return {\n      myChart: null,\n      options: this.getAdjustTodoArray,\n      value: \"\"\n    };\n  },\n  computed: {\n    ...mapGetters(\"todolist\", [\"getFinishedTodos\"]),\n    getAdjustTodoArray() {\n      const todos = [];\n      for (let i = 0; i < this.getFinishedTodos.length; i++) {\n        const value = this.getFinishedTodos.id;\n        const label = this.getFinishedTodos.todoThing.title;\n        const obj = {\n          value: value,\n          label\n        };\n      }\n      return 1;\n    }\n  },\n  mounted() {\n    console.log(\"test\", this.getFinishedTodos);\n    // 使用 ECharts 初始化图表\n    // this.myChart = echarts.init(this.$el);\n    this.myChart = echarts.init(this.$el.querySelector(\"#echarts-chart\"));\n    // 配置选项\n    const option = {\n      xAxis: {\n        type: \"category\",\n        // data: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n        data: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n      },\n      yAxis: {\n        type: \"value\",\n        show: true\n      },\n      series: [{\n        data: [100, 98, 70, 50, 40, 30, 0],\n        type: \"line\",\n        smooth: false\n      }, {\n        data: [100, 98, 70, 50, 40, 30, 0],\n        type: \"line\",\n        smooth: false\n      }]\n    };\n    // 设置图表选项\n    this.myChart.setOption(option);\n    // 为确保图表在窗口大小变化时自适应，请添加以下代码：\n    window.addEventListener(\"resize\", () => {\n      this.myChart.resize();\n    });\n  },\n  beforeDestroy() {\n    // 在组件销毁前销毁图表实例\n    if (this.myChart) {\n      this.myChart.dispose();\n    }\n  }\n};","map":{"version":3,"names":["echarts","mapGetters","data","myChart","options","getAdjustTodoArray","value","computed","todos","i","getFinishedTodos","length","id","label","todoThing","title","obj","mounted","console","log","init","$el","querySelector","option","xAxis","type","yAxis","show","series","smooth","setOption","window","addEventListener","resize","beforeDestroy","dispose"],"sources":["src/pages/DiscountedConsumption.vue"],"sourcesContent":["<script>\r\nimport * as echarts from \"echarts\";\r\nimport { mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      myChart: null,\r\n      options: this.getAdjustTodoArray,\r\n      value: \"\",\r\n    };\r\n  },\r\n  computed:{\r\n    ...mapGetters(\"todolist\",[\"getFinishedTodos\"]),\r\n    getAdjustTodoArray(){\r\n      const todos = []\r\n      for(let i = 0;i<this.getFinishedTodos.length;i++){\r\n        const value = this.getFinishedTodos.id\r\n        const label = this.getFinishedTodos.todoThing.title\r\n        const obj = {value:value,label}\r\n      }\r\n      return 1\r\n    }\r\n  },\r\n  mounted() {\r\n    console.log(\"test\",this.getFinishedTodos);\r\n    // 使用 ECharts 初始化图表\r\n    // this.myChart = echarts.init(this.$el);\r\n    this.myChart = echarts.init(this.$el.querySelector(\"#echarts-chart\"));\r\n    // 配置选项\r\n    const option = {\r\n      xAxis: {\r\n        type: \"category\",\r\n        // data: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\r\n        data: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\r\n      },\r\n      yAxis: {\r\n        type: \"value\",\r\n        show: true,\r\n      },\r\n      series: [\r\n        {\r\n          data: [100, 98, 70, 50, 40, 30, 0],\r\n          type: \"line\",\r\n          smooth: false,\r\n        },\r\n        {\r\n          data: [100, 98, 70, 50, 40, 30, 0],\r\n          type: \"line\",\r\n          smooth: false,\r\n        },\r\n      ],\r\n    };\r\n    // 设置图表选项\r\n    this.myChart.setOption(option);\r\n    // 为确保图表在窗口大小变化时自适应，请添加以下代码：\r\n    window.addEventListener(\"resize\", () => {\r\n      this.myChart.resize();\r\n    });\r\n  },\r\n\r\n  beforeDestroy() {\r\n    // 在组件销毁前销毁图表实例\r\n    if (this.myChart) {\r\n      this.myChart.dispose();\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <div class=\"selector\">\r\n      <el-select v-model=\"value\" filterable placeholder=\"请选择\">\r\n        <el-option\r\n          v-for=\"item in options\"\r\n          :key=\"item.value\"\r\n          :label=\"item.label\"\r\n          :value=\"item.value\"\r\n        >\r\n        </el-option>\r\n      </el-select>\r\n    </div>\r\n    <div id=\"echarts-chart\" style=\"width: 100%; height: 400px\"></div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n</style>"],"mappings":"AACA,YAAAA,OAAA;AACA,SAAAC,UAAA;AAEA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,OAAA,OAAAC,kBAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAN,UAAA;IACAI,mBAAA;MACA,MAAAG,KAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,QAAAC,gBAAA,CAAAC,MAAA,EAAAF,CAAA;QACA,MAAAH,KAAA,QAAAI,gBAAA,CAAAE,EAAA;QACA,MAAAC,KAAA,QAAAH,gBAAA,CAAAI,SAAA,CAAAC,KAAA;QACA,MAAAC,GAAA;UAAAV,KAAA,EAAAA,KAAA;UAAAO;QAAA;MACA;MACA;IACA;EACA;EACAI,QAAA;IACAC,OAAA,CAAAC,GAAA,cAAAT,gBAAA;IACA;IACA;IACA,KAAAP,OAAA,GAAAH,OAAA,CAAAoB,IAAA,MAAAC,GAAA,CAAAC,aAAA;IACA;IACA,MAAAC,MAAA;MACAC,KAAA;QACAC,IAAA;QACA;QACAvB,IAAA;MACA;MACAwB,KAAA;QACAD,IAAA;QACAE,IAAA;MACA;MACAC,MAAA,GACA;QACA1B,IAAA;QACAuB,IAAA;QACAI,MAAA;MACA,GACA;QACA3B,IAAA;QACAuB,IAAA;QACAI,MAAA;MACA;IAEA;IACA;IACA,KAAA1B,OAAA,CAAA2B,SAAA,CAAAP,MAAA;IACA;IACAQ,MAAA,CAAAC,gBAAA;MACA,KAAA7B,OAAA,CAAA8B,MAAA;IACA;EACA;EAEAC,cAAA;IACA;IACA,SAAA/B,OAAA;MACA,KAAAA,OAAA,CAAAgC,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}