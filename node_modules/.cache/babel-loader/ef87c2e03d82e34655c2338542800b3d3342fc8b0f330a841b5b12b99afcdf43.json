{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as echarts from \"echarts\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"DiscountedConsumption\",\n  data() {\n    return {\n      myChart: null,\n      options: [],\n      value: \"\"\n    };\n  },\n  computed: {\n    ...mapGetters(\"todolist\", [\"getFinishedTodos\", \"getStepsTodos\"])\n  },\n  methods: {\n    getAdjustTodoArray() {\n      for (let i = 0; i < this.getStepsTodos.length; i++) {\n        const value = this.getStepsTodos[i].id;\n        const label = this.getStepsTodos[i].todoThing.title;\n        const obj = {\n          value: value,\n          label: label\n        };\n        this.options.push(obj);\n      }\n    }\n  },\n  watch: {\n    value: {\n      handler(newValue) {\n        //newValue是todos的id\n        this.getStepsTodos.forEach(item => {\n          if (newValue == item.id) {\n            console.log(item.todoThing.deadline);\n          }\n        });\n      }\n    }\n  },\n  mounted() {\n    this.getAdjustTodoArray();\n    // 使用 ECharts 初始化图表\n    // this.myChart = echarts.init(this.$el);\n    this.myChart = echarts.init(this.$el.querySelector(\"#echarts-chart\"));\n    // 配置选项\n    const option = {\n      xAxis: {\n        type: \"category\",\n        // data: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n        data: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n      },\n      yAxis: {\n        type: \"value\",\n        show: true\n      },\n      /*    series中的第一个折线，表示自己的任务折线，\r\n      直接根据step量和天数规划出来\r\n      \n      \n          */\n      series: [{\n        data: [100, 98, 70, 50, 40, 30, 0],\n        type: \"line\",\n        smooth: false\n      }, {\n        data: [100, 98, 70, 50, 40, 30, 0],\n        type: \"line\",\n        smooth: false\n      }]\n    };\n    // 设置图表选项\n    this.myChart.setOption(option);\n    // 为确保图表在窗口大小变化时自适应，请添加以下代码：\n    window.addEventListener(\"resize\", () => {\n      this.myChart.resize();\n    });\n  },\n  beforeDestroy() {\n    // 在组件销毁前销毁图表实例\n    if (this.myChart) {\n      this.myChart.dispose();\n    }\n  }\n};","map":{"version":3,"names":["echarts","mapGetters","name","data","myChart","options","value","computed","methods","getAdjustTodoArray","i","getStepsTodos","length","id","label","todoThing","title","obj","push","watch","handler","newValue","forEach","item","console","log","deadline","mounted","init","$el","querySelector","option","xAxis","type","yAxis","show","series","smooth","setOption","window","addEventListener","resize","beforeDestroy","dispose"],"sources":["src/pages/DiscountedConsumption.vue"],"sourcesContent":["<script>\r\nimport * as echarts from \"echarts\";\r\nimport { mapGetters } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"DiscountedConsumption\",\r\n  data() {\r\n    return {\r\n      myChart: null,\r\n      options: [],\r\n      value: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(\"todolist\", [\"getFinishedTodos\", \"getStepsTodos\"]),\r\n  },\r\n  methods: {\r\n    getAdjustTodoArray() {\r\n      for (let i = 0; i < this.getStepsTodos.length; i++) {\r\n        const value = this.getStepsTodos[i].id;\r\n        const label = this.getStepsTodos[i].todoThing.title;\r\n        const obj = { value: value, label: label };\r\n        this.options.push(obj);\r\n      }\r\n    },\r\n    \r\n  },\r\n  watch: {\r\n    value: {\r\n      handler(newValue) {\r\n        //newValue是todos的id\r\n        this.getStepsTodos.forEach((item) => {\r\n          if (newValue == item.id) {\r\n            console.log(item.todoThing.deadline);\r\n          }\r\n        });\r\n      },\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getAdjustTodoArray();\r\n    // 使用 ECharts 初始化图表\r\n    // this.myChart = echarts.init(this.$el);\r\n    this.myChart = echarts.init(this.$el.querySelector(\"#echarts-chart\"));\r\n    // 配置选项\r\n    const option = {\r\n      xAxis: {\r\n        type: \"category\",\r\n        // data: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\r\n        data: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\r\n      },\r\n      yAxis: {\r\n        type: \"value\",\r\n        show: true,\r\n      },\r\n   /*    series中的第一个折线，表示自己的任务折线，\r\n   直接根据step量和天数规划出来\r\n\r\n\r\n\r\n\r\n       */\r\n      series: [\r\n        {\r\n          data: [100, 98, 70, 50, 40, 30, 0],\r\n          type: \"line\",\r\n          smooth: false,\r\n        },\r\n        {\r\n          data: [100, 98, 70, 50, 40, 30, 0],\r\n          type: \"line\",\r\n          smooth: false,\r\n        },\r\n      ],\r\n    };\r\n    // 设置图表选项\r\n    this.myChart.setOption(option);\r\n    // 为确保图表在窗口大小变化时自适应，请添加以下代码：\r\n    window.addEventListener(\"resize\", () => {\r\n      this.myChart.resize();\r\n    });\r\n  },\r\n\r\n  beforeDestroy() {\r\n    // 在组件销毁前销毁图表实例\r\n    if (this.myChart) {\r\n      this.myChart.dispose();\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <div class=\"selector\">\r\n      <el-select v-model=\"value\" filterable placeholder=\"请选择\">\r\n        <el-option\r\n          v-for=\"item in options\"\r\n          :key=\"item.value\"\r\n          :label=\"item.label\"\r\n          :value=\"item.value\"\r\n        >\r\n        </el-option>\r\n      </el-select>\r\n    </div>\r\n    <div id=\"echarts-chart\" style=\"width: 100%; height: 400px\"></div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n</style>"],"mappings":";AACA,YAAAA,OAAA;AACA,SAAAC,UAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,OAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAN,UAAA;EACA;EACAO,OAAA;IACAC,mBAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,QAAAC,aAAA,CAAAC,MAAA,EAAAF,CAAA;QACA,MAAAJ,KAAA,QAAAK,aAAA,CAAAD,CAAA,EAAAG,EAAA;QACA,MAAAC,KAAA,QAAAH,aAAA,CAAAD,CAAA,EAAAK,SAAA,CAAAC,KAAA;QACA,MAAAC,GAAA;UAAAX,KAAA,EAAAA,KAAA;UAAAQ,KAAA,EAAAA;QAAA;QACA,KAAAT,OAAA,CAAAa,IAAA,CAAAD,GAAA;MACA;IACA;EAEA;EACAE,KAAA;IACAb,KAAA;MACAc,QAAAC,QAAA;QACA;QACA,KAAAV,aAAA,CAAAW,OAAA,CAAAC,IAAA;UACA,IAAAF,QAAA,IAAAE,IAAA,CAAAV,EAAA;YACAW,OAAA,CAAAC,GAAA,CAAAF,IAAA,CAAAR,SAAA,CAAAW,QAAA;UACA;QACA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAlB,kBAAA;IACA;IACA;IACA,KAAAL,OAAA,GAAAJ,OAAA,CAAA4B,IAAA,MAAAC,GAAA,CAAAC,aAAA;IACA;IACA,MAAAC,MAAA;MACAC,KAAA;QACAC,IAAA;QACA;QACA9B,IAAA;MACA;MACA+B,KAAA;QACAD,IAAA;QACAE,IAAA;MACA;MACA;AACA;;;;MAMAC,MAAA,GACA;QACAjC,IAAA;QACA8B,IAAA;QACAI,MAAA;MACA,GACA;QACAlC,IAAA;QACA8B,IAAA;QACAI,MAAA;MACA;IAEA;IACA;IACA,KAAAjC,OAAA,CAAAkC,SAAA,CAAAP,MAAA;IACA;IACAQ,MAAA,CAAAC,gBAAA;MACA,KAAApC,OAAA,CAAAqC,MAAA;IACA;EACA;EAEAC,cAAA;IACA;IACA,SAAAtC,OAAA;MACA,KAAAA,OAAA,CAAAuC,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}