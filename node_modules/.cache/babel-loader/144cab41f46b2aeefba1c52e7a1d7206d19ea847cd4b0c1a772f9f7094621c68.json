{"ast":null,"code":"import moment from \"moment\";\nexport default {\n  name: \"TemperatureEchart\",\n  props: {\n    echartData: {\n      type: Array,\n      default() {\n        return [];\n      }\n    },\n    upperWarningLimit: {\n      default: 0\n    },\n    lowerWarningLimit: {\n      default: 0\n    },\n    echartsId: {\n      default: \"echarts-demo\"\n    }\n  },\n  data() {\n    return {\n      myChart: {}\n    };\n  },\n  watch: {\n    echartData: {\n      handler(newVal, oldVal) {\n        if (newVal.length > 0) {\n          this.drawLine(newVal, this.upperWarningLimit, this.lowerWarningLimit);\n        }\n      },\n      deep: true\n    }\n  },\n  mounted() {\n    if (this.echartData.length > 0) {\n      this.drawLine(this.echartData, this.upperWarningLimit, this.lowerWarningLimit);\n    }\n  },\n  methods: {\n    drawLine(data, upperWarningLimit, lowerWarningLimit) {\n      if (!data || data.length === 0) return;\n      // 基于准备好的dom，初始化echarts实例\n      this.myChart = this.$echarts.init(document.getElementById(this.echartsId));\n      const numArr = data.map(item => item.value).concat([upperWarningLimit, lowerWarningLimit]);\n      const numMax = Math.max(...numArr) + 2,\n        numMin = Math.min(...numArr) - 2;\n      // 绘制图表\n      this.myChart.setOption({\n        color: [\"blue\"],\n        // 线的颜色\n        xAxis: {\n          type: 'category',\n          data: data.map(item => moment(item.valueTime).format(\"YYYY-MM-DD HH:mm:ss\")),\n          axisLine: {\n            onZero: false\n          },\n          boundaryGap: false\n        },\n        yAxis: {\n          type: 'value',\n          max: numMax,\n          min: numMin,\n          axisTick: {\n            show: false\n          }\n        },\n        grid: {\n          // 偏移量。xAixs/yAxis/grid在多轴时，可以为数组\n          left: \"5%\",\n          rigth: \"0%\"\n        },\n        dataZoom: [\n        // echarts的收缩配置\n        // { type: \"slider\" },\n        {\n          type: \"inside\"\n        }],\n        series: [{\n          // 图表数据的配置\n          data: data.map(item => item),\n          type: 'line',\n          smooth: true,\n          // showAllSymbol: true\n          markLine: {\n            // 辅助线\n            data: [{\n              name: 'upperWarningLine',\n              yAxis: upperWarningLimit\n            }, {\n              name: 'lowerWarningLine',\n              yAxis: lowerWarningLimit\n            }],\n            itemStyle: {\n              // 辅助线的样式\n              normal: {\n                borderWidth: 2,\n                lineStyle: {\n                  type: 'dashed',\n                  color: 'red',\n                  width: 1\n                }\n              }\n            }\n          },\n          markPoint: {\n            // 气泡\n            data: [{\n              type: 'max',\n              name: 'Max'\n            }, {\n              type: 'min',\n              name: 'Min'\n            }],\n            itemStyle: {\n              // 气泡的背景色\n              color: \"rgba(0, 0, 0, 0)\"\n            },\n            silent: true,\n            label: {\n              // 气泡的文字\n              color: \"#000\",\n              fontWeight: \"bold\",\n              formatter(params) {\n                return params.value + \"℃\";\n              }\n            }\n          }\n        }],\n        tooltip: {\n          // 提示栏\n          textStyle: {\n            align: 'left'\n          },\n          trigger: 'item',\n          formatter: function (params) {\n            const componentType = params.componentType;\n            if (componentType == \"markLine\") {\n              return `温度上限：${upperWarningLimit}℃ <br /> 温度下限：${lowerWarningLimit}℃ <br />`;\n            } else if (componentType == \"series\") {\n              return `温度：${params.data.valueStr}<br /> \n                电量：${params.data.eleValueStr} <br /> \n                标本箱码：${params.data.specimenBoxCode} <br /> \n                线路名称：${params.data.lineName} <br /> \n                位置：${params.data.position} <br /> \n                状态：${params.data.alarmStr} <br /> \n                时间：${params.data.valueTime} `;\n            }\n          }\n        }\n      }, true);\n    }\n  }\n};","map":{"version":3,"names":["moment","name","props","echartData","type","Array","default","upperWarningLimit","lowerWarningLimit","echartsId","data","myChart","watch","handler","newVal","oldVal","length","drawLine","deep","mounted","methods","$echarts","init","document","getElementById","numArr","map","item","value","concat","numMax","Math","max","numMin","min","setOption","color","xAxis","valueTime","format","axisLine","onZero","boundaryGap","yAxis","axisTick","show","grid","left","rigth","dataZoom","series","smooth","markLine","itemStyle","normal","borderWidth","lineStyle","width","markPoint","silent","label","fontWeight","formatter","params","tooltip","textStyle","align","trigger","componentType","valueStr","eleValueStr","specimenBoxCode","lineName","position","alarmStr"],"sources":["src/pages/DiscountedConsumption.vue"],"sourcesContent":["<template>\r\n  <div class=\"temperature-echart\">\r\n    <div :id=\"echartsId\"  :style=\"{width: '100%', height: '400px'}\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport moment from \"moment\";\r\nexport default {\r\n  name: \"TemperatureEchart\",\r\n  props: {\r\n    echartData: { type: Array, default() { return [] } },\r\n    upperWarningLimit: { default: 0 },\r\n    lowerWarningLimit: { default: 0 },\r\n    echartsId: { default: \"echarts-demo\" }\r\n  },\r\n  data() {\r\n    return {\r\n      myChart: {}\r\n    }\r\n  },\r\n  watch: {\r\n    echartData: {\r\n      handler(newVal, oldVal) {\r\n        if (newVal.length > 0) {\r\n          this.drawLine(newVal, this.upperWarningLimit, this.lowerWarningLimit)\r\n        }\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n  mounted() {\r\n    if (this.echartData.length > 0) {\r\n      this.drawLine(this.echartData, this.upperWarningLimit, this.lowerWarningLimit)\r\n    }\r\n  },\r\n  methods: {\r\n    drawLine(data, upperWarningLimit, lowerWarningLimit) {\r\n      if (!data || data.length === 0) return;\r\n      // 基于准备好的dom，初始化echarts实例\r\n      this.myChart = this.$echarts.init(document.getElementById(this.echartsId))\r\n      const numArr = data.map(item => item.value).concat([upperWarningLimit, lowerWarningLimit])\r\n      const numMax = Math.max(...numArr) + 2, numMin = Math.min(...numArr) - 2\r\n      // 绘制图表\r\n      this.myChart.setOption({\r\n        color: [\"blue\"],  // 线的颜色\r\n        xAxis: {\r\n          type: 'category',\r\n          data: data.map(item => moment(item.valueTime).format(\"YYYY-MM-DD HH:mm:ss\")),\r\n          axisLine: {\r\n            onZero: false\r\n          },\r\n          boundaryGap: false\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          max: numMax,\r\n          min: numMin,\r\n          axisTick: {\r\n            show: false\r\n          }\r\n        },\r\n        grid: {  // 偏移量。xAixs/yAxis/grid在多轴时，可以为数组\r\n          left: \"5%\",\r\n          rigth: \"0%\"\r\n        },\r\n        dataZoom: [  // echarts的收缩配置\r\n          // { type: \"slider\" },\r\n          { type: \"inside\" },\r\n        ],\r\n        series: [{  // 图表数据的配置\r\n          data: data.map(item => item),\r\n          type: 'line',\r\n          smooth: true,\r\n          // showAllSymbol: true\r\n          markLine: {  // 辅助线\r\n            data: [{\r\n                name: 'upperWarningLine',\r\n                yAxis: upperWarningLimit\r\n              },\r\n              {\r\n                name: 'lowerWarningLine',\r\n                yAxis: lowerWarningLimit\r\n              }\r\n            ],\r\n            itemStyle: {  // 辅助线的样式\r\n              normal: {\r\n                borderWidth: 2,\r\n                lineStyle: {\r\n                  type: 'dashed',\r\n                  color: 'red',\r\n                  width: 1\r\n                },\r\n              }\r\n            }\r\n          },\r\n          markPoint: {  // 气泡\r\n            data: [\r\n              { type: 'max', name: 'Max' },\r\n              { type: 'min', name: 'Min' }\r\n            ],\r\n            itemStyle: {  // 气泡的背景色\r\n              color: \"rgba(0, 0, 0, 0)\"\r\n            },\r\n            silent: true,\r\n            label: {  // 气泡的文字\r\n              color: \"#000\",\r\n              fontWeight: \"bold\",\r\n              formatter(params) {\r\n                return params.value + \"℃\"\r\n              }\r\n            }\r\n          },\r\n        }],\r\n        tooltip: {  // 提示栏\r\n          textStyle: {\r\n            align: 'left'\r\n          },\r\n          trigger: 'item',\r\n          formatter: function (params) {\r\n            const componentType = params.componentType\r\n            if (componentType == \"markLine\") {\r\n              return `温度上限：${upperWarningLimit}℃ <br /> 温度下限：${lowerWarningLimit}℃ <br />`\r\n            } else if (componentType == \"series\") {\r\n              return `温度：${params.data.valueStr}<br /> \r\n                电量：${params.data.eleValueStr} <br /> \r\n                标本箱码：${params.data.specimenBoxCode} <br /> \r\n                线路名称：${params.data.lineName} <br /> \r\n                位置：${params.data.position} <br /> \r\n                状态：${params.data.alarmStr} <br /> \r\n                时间：${params.data.valueTime} `\r\n            }\r\n          }\r\n        }\r\n      }, true);\r\n    }\r\n  }\r\n}\r\n</script>\r\n————————————————\r\n版权声明：本文为CSDN博主「Lewin.Lin」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\r\n原文链接：https://blog.csdn.net/weixin_45689946/article/details/122037987"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}