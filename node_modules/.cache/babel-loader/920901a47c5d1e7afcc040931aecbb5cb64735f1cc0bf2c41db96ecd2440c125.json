{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { nanoid } from \"nanoid\";\nimport { watch } from \"vue\";\nexport default {\n  namespaced: true,\n  state: {\n    // 增、删、改、查\n    todos: JSON.parse(localStorage.getItem(\"todos\")) || []\n  },\n  // 当state中的需要加工可以使用getters并不对数据进行修改\n  getters: {\n    getFinishedTodos(state) {\n      return state.todos.filter(item => item.isFinished);\n    },\n    getStepsTodos(state) {\n      return state.todos.filter(item => item.todoThing.steps.length != 0 && item.todoThing.deadline != null);\n    }\n  },\n  actions: {\n    add(context, value) {\n      context.commit(\"ADD\", value);\n    }\n  },\n  mutations: {\n    // 这个改一下，不在这里封装大量的逻辑\n    ADD: function (state, value) {\n      state.todos.push(value);\n      window.localStorage.setItem('todos', JSON.stringify(state.todos));\n    },\n    ADDSTEPS: function (state, value) {\n      state.todos.forEach(item => {\n        if (item.id == value.id) {\n          item.todoThing.steps.push(value.todoThing);\n          return;\n        }\n      });\n      window.localStorage.setItem('todos', JSON.stringify(state.todos));\n    },\n    EDIT: function (state, value) {\n      state.todos.forEach(item => {\n        if (item.id == value.id) {\n          item.isEdit = true;\n          return;\n        }\n      });\n    },\n    // 修改内容\n    ALTER: function (state, value) {\n      state.todos.forEach(item => {\n        if (value.id == item.id) {\n          item.isEdit = value.isEdit;\n          item.todoThing.title = value.todoThing.title;\n          return;\n        }\n      });\n      window.localStorage.setItem('todos', JSON.stringify(state.todos));\n    },\n    DELETE: function (state, value) {\n      const todoArray = state.todos;\n      for (var i = 0; i < todoArray.length; i++) {\n        if (todoArray[i].id == value.id) {\n          todoArray.splice(i, 1);\n        }\n      }\n      window.localStorage.setItem('todos', JSON.stringify(state.todos));\n    },\n    DELETEDSTEPS: function (state, value) {\n      state.todos.forEach(item => {\n        if (item.id == value.id) {\n          item.todoThing.steps = value.todoThing.steps;\n          return;\n        }\n      });\n      window.localStorage.setItem('todos', JSON.stringify(state.todos));\n    },\n    // 这里进行本地finishedTask的存储，把方法转移过来；\n    ALTERCHECKBOX: function (state, value) {\n      state.todos.forEach(item => {\n        if (item.id == value.id) {\n          item.isFinished = !item.isFinished;\n          return;\n        }\n      });\n      window.localStorage.setItem('todos', JSON.stringify(state.todos));\n\n      // 这里进行完成完成任务情况的本地存储；\n      const finishedThing = [{\n        id: \"1\",\n        name: \"待分组任务\"\n      }];\n      const arr1 = JSON.parse(localStorage.getItem(\"oneArea\")) || [];\n      const arr2 = JSON.parse(localStorage.getItem(\"twoArea\")) || [];\n      const arr3 = JSON.parse(localStorage.getItem(\"threeArea\")) || [];\n      const arr4 = JSON.parse(localStorage.getItem(\"fourArea\")) || [];\n      const newArr = [].concat(arr1, arr2, arr3, arr4);\n      for (let i = 0; i < newArr.length; i++) {\n        if (newArr[i].id == '1') {\n          newArr.splice(i, 1);\n        }\n      }\n      /* 进行四个区域中id与已完成任务中id的对比\r\n      保证待分配任务中与四个区域的任务不出现重复的现象。\r\n      */\n      let flag = true;\n      for (let i = 0; i < state.todos.length; i++) {\n        if (state.todos[i].isFinished) {\n          for (let k = 0; k < newArr.length; k++) {\n            if (newArr[k].id == state.todos[i].id) {\n              flag = false;\n              break;\n            }\n          }\n        }\n        if (state.todos[i].isFinished) {\n          if (flag) {\n            const id = state.todos[i].id;\n            const title = state.todos[i].todoThing.title;\n            const taskObj = {\n              id: id,\n              name: title\n            };\n            finishedThing.push(taskObj);\n          }\n        }\n      }\n      console.log(\"finishedThing\", finishedThing);\n      localStorage.setItem(\"finishedTask\", JSON.stringify(finishedThing));\n      // 四个区域中的数据，更新也是需要在这里进行；不然会获取到之前的死数据\n\n      const finishedTask = state.todos.filter(item => item.isFinished);\n      //这里对四个象限中的数据进行更改\n      // const newFinishedThing = finishedThing;\n      const newArr1 = arr1;\n      const newArr2 = arr2;\n      const newArr3 = arr3;\n      const newArr4 = arr4;\n\n      // 对oneArea进行删除操作,// id相同的留下来，不同的就删除；\n      for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i].id == \"1\") {\n          continue;\n        }\n        let flag = true;\n        for (let index = 0; index < finishedTask.length; index++) {\n          if (finishedTask[index].id == \"1\") {\n            continue;\n          }\n          console.log(\"index\", index); //只有2没有1\n          if (arr1[i].id == finishedTask[index].id) {\n            flag = false;\n            break;\n          }\n        }\n        if (flag) {\n          if (newArr1[i].id != '1') {\n            newArr1.splice(i, 1);\n            console.log(\"移除成功\", i);\n          }\n        }\n      }\n      console.log(\"finishedTask\", finishedTask);\n      console.log(\"arr1\", arr1);\n      console.log(\"newArr1\", newArr1);\n      localStorage.setItem(\"oneArea\", JSON.stringify(newArr1));\n\n      //对区域进行处理\n      for (let i = 0; i < arr2.length; i++) {\n        if (arr2[i].id == \"1\") {\n          continue;\n        }\n        let flag = true;\n        for (let index = 0; index < finishedTask.length; index++) {\n          if (finishedTask[index].id == \"1\") {\n            continue;\n          }\n          console.log(\"index\", index); //只有2没有1\n          if (arr2[i].id == finishedTask[index].id) {\n            flag = false;\n            break;\n          }\n        }\n        if (flag) {\n          if (newArr2[i].id != '1') {\n            newArr2.splice(i, 1);\n            console.log(\"移除成功\", i);\n          }\n        }\n      }\n      console.log(\"finishedTask\", finishedTask);\n      console.log(\"arr2\", arr2);\n      console.log(\"newArr1\", newArr1);\n      localStorage.setItem(\"oneArea\", JSON.stringify(newArr1));\n    },\n    ALTERCHESTEPSCKBOX: function (state, value) {\n      state.todos.forEach(item => {\n        if (item.id == value.id) {\n          // 组件内加工好，这边直接进行更换：\n          item.todoThing.steps = value.todoThing.steps;\n          return;\n        }\n      });\n      window.localStorage.setItem('todos', JSON.stringify(state.todos));\n    },\n    CHANGEWEIGHT: function (state, value) {\n      state.todos.forEach(item => {\n        if (item.id == value.id) {\n          item.isImportance = !item.isImportance;\n          return;\n        }\n      });\n      window.localStorage.setItem('todos', JSON.stringify(state.todos));\n    },\n    SETDEADLINE: function (state, value) {\n      state.todos.forEach(item => {\n        if (item.id == value.id) {\n          item.todoThing.deadline = value.todoThing.deadline;\n          return;\n        }\n      });\n      window.localStorage.setItem('todos', JSON.stringify(state.todos));\n    }\n  }\n};","map":{"version":3,"names":["nanoid","watch","namespaced","state","todos","JSON","parse","localStorage","getItem","getters","getFinishedTodos","filter","item","isFinished","getStepsTodos","todoThing","steps","length","deadline","actions","add","context","value","commit","mutations","ADD","push","window","setItem","stringify","ADDSTEPS","forEach","id","EDIT","isEdit","ALTER","title","DELETE","todoArray","i","splice","DELETEDSTEPS","ALTERCHECKBOX","finishedThing","name","arr1","arr2","arr3","arr4","newArr","concat","flag","k","taskObj","console","log","finishedTask","newArr1","newArr2","newArr3","newArr4","index","ALTERCHESTEPSCKBOX","CHANGEWEIGHT","isImportance","SETDEADLINE"],"sources":["D:/SoftwareDevelop/VsData/Vue/todolist/src/store/todoOptions.js"],"sourcesContent":["\r\nimport { nanoid } from \"nanoid\";\r\nimport { watch } from \"vue\";\r\nexport default {\r\n    namespaced: true,\r\n    state: {\r\n        // 增、删、改、查\r\n        todos: JSON.parse(localStorage.getItem(\"todos\")) || []\r\n    },\r\n\r\n    // 当state中的需要加工可以使用getters并不对数据进行修改\r\n    getters: {\r\n        getFinishedTodos(state) {\r\n            return state.todos.filter((item) => item.isFinished)\r\n        },\r\n        getStepsTodos(state) {\r\n            return state.todos.filter((item) => item.todoThing.steps.length != 0 && item.todoThing.deadline != null)\r\n        }\r\n    },\r\n\r\n    actions: {\r\n        add(context, value) {\r\n            context.commit(\"ADD\", value)\r\n        }\r\n    },\r\n    mutations: {\r\n        // 这个改一下，不在这里封装大量的逻辑\r\n        ADD: function (state, value) {\r\n            state.todos.push(value)\r\n            window.localStorage.setItem('todos', JSON.stringify(state.todos))\r\n        },\r\n        ADDSTEPS: function (state, value) {\r\n            state.todos.forEach(item => {\r\n                if (item.id == value.id) {\r\n                    item.todoThing.steps.push(value.todoThing)\r\n                    return\r\n                }\r\n            })\r\n            window.localStorage.setItem('todos', JSON.stringify(state.todos))\r\n        },\r\n        EDIT: function (state, value) {\r\n            state.todos.forEach(item => {\r\n                if (item.id == value.id) {\r\n                    item.isEdit = true;\r\n                    return\r\n                }\r\n            });\r\n        },\r\n        // 修改内容\r\n        ALTER: function (state, value) {\r\n            state.todos.forEach(item => {\r\n                if (value.id == item.id) {\r\n                    item.isEdit = value.isEdit;\r\n                    item.todoThing.title = value.todoThing.title;\r\n                    return\r\n                }\r\n            });\r\n            window.localStorage.setItem('todos', JSON.stringify(state.todos))\r\n        },\r\n        DELETE: function (state, value) {\r\n            const todoArray = state.todos\r\n            for (var i = 0; i < todoArray.length; i++) {\r\n                if (todoArray[i].id == value.id) {\r\n                    todoArray.splice(i, 1)\r\n                }\r\n            }\r\n            window.localStorage.setItem('todos', JSON.stringify(state.todos))\r\n        },\r\n        DELETEDSTEPS: function (state, value) {\r\n            state.todos.forEach(item => {\r\n                if (item.id == value.id) {\r\n                    item.todoThing.steps = value.todoThing.steps\r\n                    return\r\n                }\r\n            });\r\n            window.localStorage.setItem('todos', JSON.stringify(state.todos))\r\n        },\r\n        // 这里进行本地finishedTask的存储，把方法转移过来；\r\n        ALTERCHECKBOX: function (state, value) {\r\n            state.todos.forEach(item => {\r\n                if (item.id == value.id) {\r\n                    item.isFinished = !(item.isFinished)\r\n                    return\r\n                }\r\n            });\r\n            window.localStorage.setItem('todos', JSON.stringify(state.todos))\r\n\r\n            // 这里进行完成完成任务情况的本地存储；\r\n            const finishedThing = [{ id: \"1\", name: \"待分组任务\" }];\r\n            const arr1 = JSON.parse(localStorage.getItem(\"oneArea\")) || []\r\n            const arr2 = JSON.parse(localStorage.getItem(\"twoArea\")) || []\r\n            const arr3 = JSON.parse(localStorage.getItem(\"threeArea\")) || []\r\n            const arr4 = JSON.parse(localStorage.getItem(\"fourArea\")) || []\r\n            const newArr = [].concat(arr1, arr2, arr3, arr4)\r\n            for (let i = 0; i < newArr.length; i++) {\r\n                if (newArr[i].id == '1') {\r\n                    newArr.splice(i, 1);\r\n                }\r\n            }\r\n            /* 进行四个区域中id与已完成任务中id的对比\r\n            保证待分配任务中与四个区域的任务不出现重复的现象。\r\n            */\r\n            let flag = true;\r\n            for (let i = 0; i < state.todos.length; i++) {\r\n                if (state.todos[i].isFinished) {\r\n                    for (let k = 0; k < newArr.length; k++) {\r\n                        if (newArr[k].id == state.todos[i].id) {\r\n                            flag = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (state.todos[i].isFinished) {\r\n                    if (flag) {\r\n                        const id = state.todos[i].id;\r\n                        const title = state.todos[i].todoThing.title;\r\n                        const taskObj = { id: id, name: title };\r\n                        finishedThing.push(taskObj);\r\n                    }\r\n                }\r\n            }\r\n            console.log(\"finishedThing\",finishedThing);\r\n            localStorage.setItem(\"finishedTask\", JSON.stringify(finishedThing));\r\n            // 四个区域中的数据，更新也是需要在这里进行；不然会获取到之前的死数据\r\n\r\n\r\n            const finishedTask = state.todos.filter((item) => item.isFinished)\r\n            //这里对四个象限中的数据进行更改\r\n            // const newFinishedThing = finishedThing;\r\n            const newArr1 = arr1;\r\n            const newArr2 = arr2;\r\n            const newArr3 = arr3;\r\n            const newArr4 = arr4;\r\n\r\n            // 对oneArea进行删除操作,// id相同的留下来，不同的就删除；\r\n            for (let i = 0; i < arr1.length; i++) {\r\n                if (arr1[i].id == \"1\") {\r\n                    continue;\r\n                }\r\n                let flag = true\r\n                for (let index = 0; index < finishedTask.length; index++) {\r\n                    if (finishedTask[index].id == \"1\") {\r\n                        continue;\r\n                    }\r\n                    console.log(\"index\", index);//只有2没有1\r\n                    if (arr1[i].id == finishedTask[index].id) {\r\n                        flag = false\r\n                        break;\r\n                    }\r\n                }\r\n                if (flag) {\r\n                    if (newArr1[i].id != '1') {\r\n                        newArr1.splice(i, 1);\r\n                        console.log(\"移除成功\", i);\r\n                    }\r\n                }\r\n            }\r\n            console.log(\"finishedTask\", finishedTask);\r\n            console.log(\"arr1\", arr1);\r\n            console.log(\"newArr1\", newArr1);\r\n            localStorage.setItem(\"oneArea\", JSON.stringify(newArr1))\r\n            \r\n            //对区域进行处理\r\n            for (let i = 0; i < arr2.length; i++) {\r\n                if (arr2[i].id == \"1\") {\r\n                    continue;\r\n                }\r\n                let flag = true\r\n                for (let index = 0; index < finishedTask.length; index++) {\r\n                    if (finishedTask[index].id == \"1\") {\r\n                        continue;\r\n                    }\r\n                    console.log(\"index\", index);//只有2没有1\r\n                    if (arr2[i].id == finishedTask[index].id) {\r\n                        flag = false\r\n                        break;\r\n                    }\r\n                }\r\n                if (flag) {\r\n                    if (newArr2[i].id != '1') {\r\n                        newArr2.splice(i, 1);\r\n                        console.log(\"移除成功\", i);\r\n                    }\r\n                }\r\n            }\r\n            console.log(\"finishedTask\", finishedTask);\r\n            console.log(\"arr2\", arr2);\r\n            console.log(\"newArr1\", newArr1);\r\n            localStorage.setItem(\"oneArea\", JSON.stringify(newArr1)) \r\n\r\n        },\r\n        ALTERCHESTEPSCKBOX: function (state, value) {\r\n            state.todos.forEach(item => {\r\n                if (item.id == value.id) {\r\n                    // 组件内加工好，这边直接进行更换：\r\n                    item.todoThing.steps = value.todoThing.steps\r\n                    return\r\n                }\r\n            });\r\n            window.localStorage.setItem('todos', JSON.stringify(state.todos))\r\n        },\r\n        CHANGEWEIGHT: function (state, value) {\r\n            state.todos.forEach(item => {\r\n                if (item.id == value.id) {\r\n                    item.isImportance = !(item.isImportance)\r\n                    return\r\n                }\r\n            });\r\n            window.localStorage.setItem('todos', JSON.stringify(state.todos))\r\n        },\r\n        SETDEADLINE: function (state, value) {\r\n            state.todos.forEach(item => {\r\n                if (item.id == value.id) {\r\n                    item.todoThing.deadline = value.todoThing.deadline\r\n                    return\r\n                }\r\n            })\r\n            window.localStorage.setItem('todos', JSON.stringify(state.todos))\r\n        },\r\n\r\n\r\n\r\n\r\n    },\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}